# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15HwLsqqn6dQnRFrpJMzv0JQIsc4HsSlY
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
# Simulación de datos (100 pedidos)
np.random.seed(42)
# Variables simuladas
tiempo_entrega = np.random.uniform(1, 10, 100) # Tiempo de entrega (entre 1 y 10 días)
satisfaccion_cliente = 5 - (tiempo_entrega * np.random.uniform(0.2, 0.5)) # Relación
negativa ficticia
# Crear un DataFrame con los datos
data = pd.DataFrame({
 'TiempoEntrega': tiempo_entrega,
 'SatisfaccionCliente': satisfaccion_cliente
})
# Ajustar un modelo de regresión lineal
X = data['TiempoEntrega'].values.reshape(-1, 1) # Variable independiente
y = data['SatisfaccionCliente'].values # Variable dependiente
model = LinearRegression()
model.fit(X, y)
# Predecir la línea de tendencia (línea de marcación)
y_pred = model.predict(X)
# Diagrama de dispersión con la línea de tendencia
plt.figure(figsize=(8,6))
plt.scatter(data['TiempoEntrega'], data['SatisfaccionCliente'], color='blue', alpha=0.5,
label='Datos')
plt.plot(data['TiempoEntrega'], y_pred, color='red', label='Línea de tendencia') # Línea de
marcación
plt.title('Diagrama de Dispersión: Tiempo de Entrega vs Satisfacción del Cliente')
plt.xlabel('Tiempo de Entrega (días)')
plt.ylabel('Satisfacción del Cliente (Escala 1-5)')
plt.legend()
plt.grid(True)
plt.show()
# Mostrar las primeras filas del DataFrame para referencia
data.head()